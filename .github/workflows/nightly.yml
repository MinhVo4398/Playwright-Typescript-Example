name: Nightly regression tests

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      test_command:
        description: 'Custom test command'
        required: true
        default: '--grep-invert "@devRun"'
        type: string
      parallelism:
        description: 'Number of machines to split tests'
        required: false
        default: 2
        type: number

jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          count=${{ github.event.inputs.parallelism || 2 }}
          matrix=$(seq -s ',' 1 $count)
          echo "matrix=$(jq -cn --argjson groups "[$matrix]" '{group: $groups}')" >> $GITHUB_OUTPUT

  nightly-test:
    needs: setup-matrix
    timeout-minutes: 15
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.51.0-jammy
    env:
      BASE_URL: ${{ vars.BASE_URL }}
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Cache node_modules
        uses: actions/cache@v4
        id: cache-node-modules
        with:
          path: node_modules
          key: modules-${{ hashFiles('package-lock.json') }}
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run Playwright tests
        run: xvfb-run npx playwright test ${{ github.event.inputs.test_command || '--grep-invert "@devRun"' }} --shard=${{ matrix.group }}/${{ github.event.inputs.parallelism || 2 }}
      - name: Upload test results and artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.group }}
          path: |
            test-results/
            allure-results
          retention-days: 7

  merge-reports:
    needs: nightly-test
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Merge and Publish Allure Report
        uses: Valiantsin2021/allure-shard-results-publish@1.0.6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          results-pattern: 'artifacts/test-results-*/allure-results'
          report-title: 'Nightly Regression Test Report'
          add-env: 'true'
